import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import ConvexClerkProvider from "@/providers/ConvexClerkProvider";
import { TooltipProvider } from "@/components/ui/tooltip";
import Footer from "@/components/Footer";
import { Toaster } from "react-hot-toast";

const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

const defaultUrl = process.env.VERCEL_URL
  ? `https://codedock-ai.vercel.app`
  : process.env.NODE_ENV === 'development'
  ? `http://localhost:3000`
  : `https://codedock-ai.vercel.app`;

export const metadata: Metadata = {
  metadataBase: new URL(defaultUrl),
  title: "CodeDock AI",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ConvexClerkProvider>
      <html lang="en" suppressHydrationWarning>
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen bg-gradient-to-b from-gray-900 to-gray-950 text-gray-100 flex flex-col`}
        >
          <TooltipProvider>
            {children}
          </TooltipProvider>

          <Footer />
          <Toaster />
        </body>
      </html>
    </ConvexClerkProvider>
  );
};